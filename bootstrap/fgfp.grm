$EXTERN
{
    'fgfx.lex.h',
};

$PRODUCTION
{
	<FGFP>		->	{ <section> } => ( $RIGHT ) ;
	<section>	->	<extern_section>
				|	<production_section>
				|	<alias_section>
				|	<prec_section>
				;
    
	<extern_section>	->	'$EXTERN' '{' <path_list> '}' ';'    ;
	<path_list>			->	LITERAL [ ',' <path_list> ] | $EMPTY ;

	<alias_section>		->	'$ALIAS' '{' <alias_list> '}' ';'            ;
	<alias_list>		->	<alias_entry> [ ',' <alias_list> ] | $EMPTY  ;
	<alias_entry>		->	'(' GLOBAL_TOK '=>' <alias_literal_list> ')' ;

	<alias_literal_list>	->	LITERAL [ ',' <alias_literal_list'> ] ;
	<alias_literal_list'>	->	LITERAL [ ',' <alias_literal_list'> ]
							|	$EMPTY
							;

	<prec_section>		->	'$PRECEDENCE' '{' <prec_list> '}' ';' ;
	<prec_list>			->	<prec_dir> '(' <prec_atom_list> ')'
										[ ',' <prec_list> ]
						|	$EMPTY
						;

	<prec_atom_list>	->	<prec_atom> [ ',' <prec_atom_list'> ]          ;
	<prec_atom_list'>	->	<prec_atom> [ ',' <prec_atom_list'> ] | $EMPTY ;

	<prec_atom>			->	GLOBAL_TOK | LITERAL ;
	<prec_dir>			->	'$NONASSOC' | <left_right> ;
	<left_right>		->	'$LEFT' | '$RIGHT' ;


	<production_section>	->	'$PRODUCTION' '{' <production_list> '}' ';' ;
	<production_list>		->	{ <production> } => ( $RIGHT ) ;

	<production>	->	NTER <follow_prod> ';' ;
	<follow_prod>	->	'=' '$START'
					|	'->' <rhs>
					;
    
	<rhs>	->	<opt_list> <mimic>
				{ '|' <opt_list> <mimic> } => ( $RIGHT ) ;
   
	<opt_list>	->	<symbol_list>
				|	'$EMPTY'
				|	 $EMPTY
				;

	<symbol_list>	->	<symbol> { <symbol> } => ( $RIGHT ) ;

	<mimic>		->	'(' '$MIMIC' <prec_atom> ')'
				|	$EMPTY
				;

	<symbol>	->	<prec_atom>
				|	NTER
				|	'[' <rhs> ']'
//				|	'(' <rhs> ')'
				|	'{' <rhs> '}' [ '=>' '(' <left_right> ')' ]
				;

	<FGFP>	=	$START;
};

$ALIAS
{
	(EXTERN		=> '$EXTERN')		,
	(ALIAS		=> '$ALIAS')		,
	(PRODUCTION	=> '$PRODUCTION')	,
	(START		=> '$START')		,
	(PRECEDENCE	=> '$PRECEDENCE')	,
	(EMPTY		=> '$EMPTY')		,
	(LEFT		=> '$LEFT')			,
	(RIGHT		=> '$RIGHT')		,
	(NONASSOC	=> '$NONASSOC')		,
	(MIMIC		=> '$MIMIC')		,
	(COMMA		=> ',')				,
	(SEMI		=> ';')				,
	(LPAREN		=> '(')				,
	(RPAREN		=> ')')				,
	(LBRACE		=> '{')				,
	(RBRACE		=> '}')				,
	(EQUAL		=> '=')				,
	(UNION		=> '|')				,
	(ARROW		=> '->')			,
	(BARROW		=> '=>')			,
	(LBRACK		=> '[')				,
	(RBRACK		=> ']')				,
};
